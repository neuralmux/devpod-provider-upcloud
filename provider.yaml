name: upcloud
version: 0.1.0
description: |-
  DevPod on UpCloud
icon: https://github.com/neuralmux/devpod-provider-upcloud/blob/main/assets/cloudmark.png
optionGroups:
  - options:
      - UPCLOUD_USERNAME
      - UPCLOUD_PASSWORD
      - UPCLOUD_ZONE
    name: "UpCloud Credentials"
    defaultVisible: true
  - options:
      - UPCLOUD_PLAN
      - UPCLOUD_STORAGE
      - UPCLOUD_IMAGE
      - UPCLOUD_TEMPLATE
    name: "Server Configuration"
    defaultVisible: true
  - options:
      - AGENT_PATH
      - AGENT_DATA_PATH
      - INACTIVITY_TIMEOUT
      - INJECT_DOCKER_CREDENTIALS
      - INJECT_GIT_CREDENTIALS
    name: "Advanced Options"
    defaultVisible: false
options:
  UPCLOUD_USERNAME:
    description: The UpCloud API username to use.
    required: true
    password: false
    command: |-
      # Try to get from environment first
      if [ ! -z "${UPCLOUD_USERNAME}" ]; then
        printf "%s" "${UPCLOUD_USERNAME}"
      # Try to read from UpCloud CLI config if exists
      elif [ -f "$HOME/.config/upcloud/config.json" ]; then
        cat "$HOME/.config/upcloud/config.json" 2>/dev/null | grep -o '"username":"[^"]*' | grep -o '[^"]*$' || true
      fi

  UPCLOUD_PASSWORD:
    description: The UpCloud API password to use.
    required: true
    password: true
    command: |-
      # Try to get from environment first
      if [ ! -z "${UPCLOUD_PASSWORD}" ]; then
        printf "%s" "${UPCLOUD_PASSWORD}"
      # Try to read from UpCloud CLI config if exists
      elif [ -f "$HOME/.config/upcloud/config.json" ]; then
        cat "$HOME/.config/upcloud/config.json" 2>/dev/null | grep -o '"password":"[^"]*' | grep -o '[^"]*$' || true
      fi

  UPCLOUD_ZONE:
    description: The UpCloud zone to use. E.g. de-fra1
    required: true
    default: de-fra1
    suggestions:
      - de-fra1
      - fi-hel1
      - fi-hel2
      - nl-ams1
      - uk-lon1
      - us-nyc1
      - us-chi1
      - us-sjo1
      - sg-sin1
      - au-syd1

  UPCLOUD_STORAGE:
    description: The disk size in GB.
    default: "50"

  UPCLOUD_IMAGE:
    description: The operating system image to use.
    default: Ubuntu Server 24.04 LTS (Noble Numbat)
    suggestions:
      - Ubuntu Server 24.04 LTS (Noble Numbat)
      - Ubuntu Server 22.04 LTS (Jammy Jellyfish)
      - Ubuntu Server 20.04 LTS (Focal Fossa)
      - Debian 12 (Bookworm)
      - Debian 11 (Bullseye)
      - Rocky Linux 9
      - AlmaLinux 9

  UPCLOUD_TEMPLATE:
    description: "Custom template UUID (optional). If set, overrides the UPCLOUD_IMAGE selection."
    required: false
    suggestions:
      - "01000000-0000-4000-8000-000030240200" # Ubuntu 24.04 LTS

  UPCLOUD_PLAN:
    description: "Server plan (run 'devpod-provider-upcloud plans' to list all available plans)"
    default: DEV-2xCPU-4GB
    suggestions:
      # Developer Plans (Recommended for DevPod - Best Value)
      - DEV-1xCPU-1GB-10GB # €3/month - Minimal dev
      - DEV-1xCPU-2GB # €8/month - Light dev
      - DEV-2xCPU-4GB # €18/month - Standard dev (DEFAULT)
      - DEV-2xCPU-8GB # €25/month - Professional dev
      - DEV-2xCPU-16GB # €35/month - Heavy dev
      # Cloud Native Plans (Pay only when powered on)
      - CN-1xCPU-1GB # €4/month - Microservices
      - CN-2xCPU-2GB # €12/month - Small containers
      - CN-2xCPU-4GB # €16/month - Medium containers
      # General Purpose (Legacy - Higher cost)
      - 1xCPU-1GB # €7/month - Basic
      - 2xCPU-4GB # €28/month - Medium
      - 4xCPU-8GB # €56/month - Large

  INACTIVITY_TIMEOUT:
    description: If defined, will automatically stop the VM after the inactivity period.
    default: 10m

  INJECT_GIT_CREDENTIALS:
    description: "If DevPod should inject git credentials into the remote host."
    default: "true"

  INJECT_DOCKER_CREDENTIALS:
    description: "If DevPod should inject docker credentials into the remote host."
    default: "true"

  AGENT_PATH:
    description: The path where to inject the DevPod agent to.
    default: /home/devpod/.devpod/devpod

  AGENT_DATA_PATH:
    description: The path where to store the agent data.
    default: /home/devpod/.devpod/agent

agent:
  path: ${AGENT_PATH}
  dataPath: ${AGENT_DATA_PATH}
  inactivityTimeout: ${INACTIVITY_TIMEOUT}
  injectGitCredentials: ${INJECT_GIT_CREDENTIALS}
  injectDockerCredentials: ${INJECT_DOCKER_CREDENTIALS}
  binaries:
    UC_PROVIDER:
      - os: linux
        arch: amd64
        path: https://github.com/neuralmux/devpod-provider-upcloud/releases/download/##VERSION##/devpod-provider-upcloud-linux-amd64
        checksum: ##CHECKSUM_LINUX_AMD64##
      - os: linux
        arch: arm64
        path: https://github.com/neuralmux/devpod-provider-upcloud/releases/download/##VERSION##/devpod-provider-upcloud-linux-arm64
        checksum: ##CHECKSUM_LINUX_ARM64##
  exec:
    shutdown: |-
      ${UC_PROVIDER} stop
binaries:
  UC_PROVIDER:
    - os: linux
      arch: amd64
      path: https://github.com/neuralmux/devpod-provider-upcloud/releases/download/##VERSION##/devpod-provider-upcloud-linux-amd64
      checksum: ##CHECKSUM_LINUX_AMD64##
    - os: linux
      arch: arm64
      path: https://github.com/neuralmux/devpod-provider-upcloud/releases/download/##VERSION##/devpod-provider-upcloud-linux-arm64
      checksum: ##CHECKSUM_LINUX_ARM64##
    - os: darwin
      arch: amd64
      path: https://github.com/neuralmux/devpod-provider-upcloud/releases/download/##VERSION##/devpod-provider-upcloud-darwin-amd64
      checksum: ##CHECKSUM_DARWIN_AMD64##
    - os: darwin
      arch: arm64
      path: https://github.com/neuralmux/devpod-provider-upcloud/releases/download/##VERSION##/devpod-provider-upcloud-darwin-arm64
      checksum: ##CHECKSUM_DARWIN_ARM64##
    - os: windows
      arch: amd64
      path: https://github.com/neuralmux/devpod-provider-upcloud/releases/download/##VERSION##/devpod-provider-upcloud-windows-amd64.exe
      checksum: ##CHECKSUM_WINDOWS_AMD64##
exec:
  init: ${UC_PROVIDER} init
  command: ${UC_PROVIDER} command
  create: ${UC_PROVIDER} create
  delete: ${UC_PROVIDER} delete
  start: ${UC_PROVIDER} start
  stop: ${UC_PROVIDER} stop
  status: ${UC_PROVIDER} status
