name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  GO_VERSION: '1.21'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: make test

      - name: Run BDD tests
        run: make bdd
        env:
          UPCLOUD_USERNAME: test
          UPCLOUD_PASSWORD: test
          UPCLOUD_ZONE: de-fra1
          UPCLOUD_PLAN: 2xCPU-4GB
          UPCLOUD_STORAGE: "50"
          UPCLOUD_IMAGE: "Ubuntu Server 22.04 LTS (Jammy Jellyfish)"

      - name: Generate coverage report
        run: make coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Build binary
        run: make build

      - name: Test binary
        run: |
          ./bin/devpod-provider-upcloud --help
          # Test with mock credentials
          UPCLOUD_USERNAME=test UPCLOUD_PASSWORD=test ./bin/devpod-provider-upcloud init

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ runner.os }}
          path: bin/devpod-provider-upcloud

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run Gosec Security Scanner
        uses: securecodewarrior/github-action-gosec@master
        with:
          args: './...'

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [test, build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build binary
        run: make build

      - name: Run integration tests
        run: ./test-local.sh
        env:
          UPCLOUD_USERNAME: test
          UPCLOUD_PASSWORD: test

      # Optional: Test with real UpCloud credentials if secrets are set
      - name: Test with real credentials
        if: ${{ secrets.UPCLOUD_USERNAME && secrets.UPCLOUD_PASSWORD }}
        run: |
          export UPCLOUD_USERNAME="${{ secrets.UPCLOUD_USERNAME }}"
          export UPCLOUD_PASSWORD="${{ secrets.UPCLOUD_PASSWORD }}"
          ./bin/devpod-provider-upcloud init
        continue-on-error: true

