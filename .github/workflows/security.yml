name: Security

on:
  schedule:
    - cron: '0 0 * * 1' # Weekly on Monday
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    # Disabled for private repositories - requires GitHub Advanced Security
    if: false
    strategy:
      fail-fast: false
      matrix:
        language: [ 'go' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Build
        run: make build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  gosec:
    name: Gosec Security Scan
    runs-on: ubuntu-latest
    # Disabled for private repositories - requires GitHub Advanced Security for SARIF upload
    if: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: '-fmt sarif -out gosec.sarif ./...'

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: github.event.repository.visibility == 'public'
        continue-on-error: true
        with:
          sarif_file: gosec.sarif
      
      - name: Upload Gosec results as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gosec-results
          path: gosec.sarif

  trivy:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    # Disabled for private repositories - requires GitHub Advanced Security for SARIF upload
    if: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: github.event.repository.visibility == 'public'
        continue-on-error: true
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: Upload Trivy results as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results
          path: trivy-results.sarif

  nancy:
    name: Nancy Vulnerability Scan
    runs-on: ubuntu-latest
    # Disabled for private repositories - requires GitHub Advanced Security for SARIF upload
    if: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Nancy vulnerability scan
        uses: sonatype-nexus-community/nancy-github-action@main
        with:
          nancyCommand: sleuth --loud

  dependency-check:
    name: OWASP Dependency Check
    runs-on: ubuntu-latest
    # Disabled for private repositories - requires GitHub Advanced Security for SARIF upload
    if: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'devpod-provider-upcloud'
          path: '.'
          format: 'SARIF'
          out: 'reports'

      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v3
        if: github.event.repository.visibility == 'public'
        continue-on-error: true
        with:
          sarif_file: reports/dependency-check-report.sarif
      
      - name: Upload OWASP results as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: owasp-dependency-check-results
          path: reports/

